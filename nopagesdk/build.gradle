apply plugin: 'com.android.library'

def static getProductName() {
    return "sdk"
}

// 发布时间
static def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 42
        versionName "3.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        sit{
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    android.libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = getProductName() + "_v${defaultConfig.versionName}" + '.aar'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //Google内购
    api 'com.android.billingclient:billing:4.0.0'//2.0.3//2.2.1//3.0.3
    //Gson
    api 'com.google.code.gson:gson:2.8.6'

    //google登录
    api 'com.google.android.gms:play-services-auth:18.0.0'
    //Google评价用到核心库
    api 'com.google.android.play:core:1.9.0'

    // Facebook Android SDK (everything)
    api 'com.facebook.android:facebook-android-sdk:11.1.1'//7.1.0

    //分包
    api 'androidx.multidex:multidex:2.0.1'

    //动画加载库Lottie
    api 'com.airbnb.android:lottie:5.0.3'

    //AIHelp客服
    api 'net.aihelp:android-aihelp-aar:2.4.12'
}


//生成sdk的jar包
def SDK_BASENAME = "sdk"
def SDK_VERSION = "_v1.0"
def sdkDestinationPath = "build/outputs/jar/"
task deleteBuild(type: Delete) {
    delete sdkDestinationPath + SDK_BASENAME + SDK_VERSION + ".jar"
}
task makeJar(type: Jar) {
    archivesBaseName = SDK_BASENAME + SDK_VERSION
    from(project.zipTree('build/intermediates/packaged-classes/release/classes.jar'))
    destinationDir = file(sdkDestinationPath)
}
makeJar.dependsOn(deleteBuild, build)
